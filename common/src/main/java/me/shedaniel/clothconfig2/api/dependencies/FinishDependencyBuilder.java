package me.shedaniel.clothconfig2.api.dependencies;

import me.shedaniel.clothconfig2.api.dependencies.requirements.GroupRequirement;
import net.minecraft.network.chat.Component;

import java.util.function.Function;

public interface FinishDependencyBuilder<SELF extends FinishDependencyBuilder<SELF>> extends DependencyBuilder<SELF> {
    /**
     * Build a dependency, applying any configuration made to this {@code DependencyBuilder} instance.
     * 
     * @return the built dependency
     */
    Dependency build();
    
    SELF withRequirement(GroupRequirement requirement);
    
    /**
     * The dependency condition will be inverted.
     * 
     * @return this instance, for chaining
     */
    default SELF inverted() {
        return inverted(true);
    }
    
    SELF setTooltipProvider(Function<String, Component[]> tooltipProvider);
    
    SELF setDescription(Component description);
    
    /**
     * Set whether the dependency condition should be inverted.
     *
     * @param inverted whether the condition should be inverted
     * @return this instance, for chaining
     */
    SELF inverted(boolean inverted);
    
    /**
     * Disable auto-generating of tooltips by the dependency.
     * If this is used, it is strongly recommended to implement your own tooltip or label text explaining the
     * dependency to your end-users.
     * 
     * @return this instance, for chaining
     * @see #displayTooltips(boolean) 
     */
    default SELF withoutTooltip() {
        return displayTooltips(false);
    }
    
    /**
     * Set whether a tooltip should be auto-generated or not by the dependency.
     * If not, it is strongly recommended to implement your own tooltip or label text explaining the dependency
     * to your end-users.
     * 
     * @param shouldGenerate whether a tooltip should be auto-generated by the dependency
     * @return this instance, for chaining
     * @see #withoutTooltip()
     */
    SELF displayTooltips(boolean shouldGenerate);
}
