plugins {
    id "com.github.johnrengelman.shadow" version "7.0.0"
    id "com.matthewprenger.cursegradle"
    id "maven-publish"
}

configurations {
    shadowCommon
    dev
}

artifacts {
    dev(jar)
}

architectury {
    platformSetupLoomIde()
    forge()
}

configurations {
    common
    shadowCommon // Don't use shadow from the shadow plugin because we don't want IDEA to index this.
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentForge.extendsFrom common
}

dependencies {
    minecraft "com.mojang:minecraft:${rootProject.architectury.minecraft}"
    mappings loom.officialMojangMappings()

    forge "net.minecraftforge:forge:${rootProject.architectury.minecraft}-${rootProject.forge_version}"

    modRuntime("me.shedaniel.cloth:basic-math:0.6.0")
    forgeDependencies(shadowCommon("me.shedaniel.cloth:basic-math:0.6.0"))

    forgeDependencies("cpw.mods:securejarhandler:0.9.48")
    implementation("blue.endless:jankson:${rootProject.jankson_version}")
    implementation("com.moandjiezana.toml:toml4j:${rootProject.toml4j_version}")
    implementation("org.yaml:snakeyaml:${rootProject.snakeyaml_version}")
    forgeDependencies(shadowCommon("blue.endless:jankson:${rootProject.jankson_version}"))
    forgeDependencies(shadowCommon("com.moandjiezana.toml:toml4j:${rootProject.toml4j_version}") {
        exclude(module: "gson")
    })
    forgeDependencies(shadowCommon("org.yaml:snakeyaml:${rootProject.snakeyaml_version}"))

    common(project(path: ":common", configuration: "namedElements")) { transitive false }
    shadowCommon(project(path: ":common", configuration: "transformProductionForge")) { transitive false }
}

processResources {
    filesMatching("META-INF/mods.toml") {
        expand "version": project.version
    }
    inputs.property "META-INF/mods.toml", project.version
}

shadowJar {
    exclude "fabric.mod.json"
    exclude "cloth-config.accessWidener"
    relocate "blue.endless.jankson", "${rootProject.maven_group}.clothconfig.shadowed.blue.endless.jankson"
    relocate "com.moandjiezana.toml", "${rootProject.maven_group}.clothconfig.shadowed.com.moandjiezana.toml"
    relocate "org.yaml.snakeyaml", "${rootProject.maven_group}.clothconfig.shadowed.org.yaml.snakeyaml"

    configurations = [project.configurations.shadowCommon]
    classifier "shadow"
}

remapJar {
    dependsOn(shadowJar)
    input.set(shadowJar.archivePath)
    archiveClassifier = "forge"

    from rootProject.file("LICENSE.md")
}

publishing {
    publications {
        mavenForge(MavenPublication) {
            artifactId = rootProject.archives_base_name + "-forge"
            artifact(remapJar.archivePath) {
                builtBy build
                classifier null
            }
        }
    }

    repositories {
        if (System.getenv("MAVEN_PASS") != null) {
            maven {
                url = "https://deploy.shedaniel.me/"
                credentials {
                    username = "shedaniel"
                    password = System.getenv("MAVEN_PASS")
                }
            }
        }
    }
}

curseforge {
    if (project.hasProperty("curse_api_key") || System.getenv("curse_api_key") != null) {
        apiKey = project.hasProperty("curse_api_key") ? project.property("curse_api_key") : System.getenv("curse_api_key")
        project {
            id = project.curseforge_id_forge
            releaseType = "release"
            addGameVersion "1.18"
            addGameVersion "Java 17"
            addGameVersion "Forge"
            mainArtifact(remapJar.archivePath) {
                displayName = "[Forge $rootProject.supported_version] v$project.version"
            }
            afterEvaluate {
                uploadTask.dependsOn("build")
            }
        }
    }
    options {
        forgeGradleIntegration = false
        javaVersionAutoDetect = false
    }
}

rootProject.tasks.getByName("curseforgePublish").dependsOn tasks.getByName("curseforge")
